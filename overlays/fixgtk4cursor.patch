From 327657067f9b99aba88f80ea579fc05f0e2d3d11 Mon Sep 17 00:00:00 2001
From: Kylie C <kyliepc@proton.me>
Date: Thu, 19 Dec 2024 19:37:06 -0500
Subject: [PATCH] a

---
 gdk/wayland/gdkcursor-wayland.c         |  2 +-
 gdk/wayland/gdkdevice-wayland-private.h |  2 +
 gdk/wayland/gdkdevice-wayland.c         | 88 +++++++++++++++++++++++--
 gdk/wayland/gdkdisplay-wayland.c        | 11 +++-
 gdk/wayland/gdkdisplay-wayland.h        |  2 +
 gdk/wayland/gdkseat-wayland.c           | 25 +++++++
 gdk/wayland/meson.build                 |  5 ++
 7 files changed, 126 insertions(+), 9 deletions(-)

diff --git a/gdk/wayland/gdkcursor-wayland.c b/gdk/wayland/gdkcursor-wayland.c
index 9f3a6259e1..62406a0e6a 100644
--- a/gdk/wayland/gdkcursor-wayland.c
+++ b/gdk/wayland/gdkcursor-wayland.c
@@ -205,7 +205,7 @@ _gdk_wayland_cursor_get_buffer (GdkWaylandDisplay *display,
           *hotspot_x = image->hotspot_x / scale_factor;
           *hotspot_y = image->hotspot_y / scale_factor;
 
-          if (*scale != scale_factor && !use_viewporter)
+          if (*scale != scale_factor && !use_viewporter && !display->shape_manager)
             {
               g_warning (G_STRLOC " cursor image size (%d) not an integer "
                          "multiple of theme size (%d)", image->width, *width);
diff --git a/gdk/wayland/gdkdevice-wayland-private.h b/gdk/wayland/gdkdevice-wayland-private.h
index 9b0c4e429c..bf55cd1a87 100644
--- a/gdk/wayland/gdkdevice-wayland-private.h
+++ b/gdk/wayland/gdkdevice-wayland-private.h
@@ -61,6 +61,7 @@ struct _GdkWaylandPointerData {
   GdkSurface *grab_surface;
   uint32_t grab_time;
 
+  struct wp_cursor_shape_device_v1 *shape_device;
   struct wl_surface *pointer_surface;
   struct wp_viewport *pointer_surface_viewport;
   guint cursor_is_default: 1;
@@ -117,6 +118,7 @@ struct _GdkWaylandTabletToolData
 {
   GdkSeat *seat;
   struct zwp_tablet_tool_v2 *wp_tablet_tool;
+  struct wp_cursor_shape_device_v1 *shape_device;
   GdkAxisFlags axes;
   GdkDeviceToolType type;
   guint64 hardware_serial;
diff --git a/gdk/wayland/gdkdevice-wayland.c b/gdk/wayland/gdkdevice-wayland.c
index 139c22cd39..c5757057ed 100644
--- a/gdk/wayland/gdkdevice-wayland.c
+++ b/gdk/wayland/gdkdevice-wayland.c
@@ -252,6 +252,65 @@ gdk_wayland_device_set_emulating_touch (GdkWaylandDevice    *wayland_device,
   priv->emulating_touch = touch;
 }
 
+static const struct
+{
+  const gchar *cursor_name;
+  const gint shape_val;
+} shape_map[] = {
+  { "default", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_DEFAULT },
+  { "context-menu", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_CONTEXT_MENU },
+  { "help", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_HELP },
+  { "pointer", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_POINTER },
+  { "progress", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_PROGRESS },
+  { "wait", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_WAIT },
+  { "cell", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_CELL },
+  { "crosshair", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_CROSSHAIR },
+  { "text", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_TEXT },
+  { "vertical-text", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_VERTICAL_TEXT },
+  { "alias", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_ALIAS },
+  { "copy", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_COPY },
+  { "move", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_MOVE },
+  { "no-drop", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NO_DROP },
+  { "not-allowed", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NOT_ALLOWED },
+  { "grab", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_GRAB },
+  { "grabbing", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_GRABBING },
+  { "e-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_E_RESIZE },
+  { "n-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_N_RESIZE },
+  { "ne-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NE_RESIZE },
+  { "nw-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NW_RESIZE },
+  { "s-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_S_RESIZE },
+  { "se-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_SE_RESIZE },
+  { "sw-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_SW_RESIZE },
+  { "w-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_W_RESIZE },
+  { "ew-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_EW_RESIZE },
+  { "ns-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NS_RESIZE },
+  { "nesw-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NESW_RESIZE },
+  { "nwse-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_NWSE_RESIZE },
+  { "col-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_COL_RESIZE },
+  { "row-resize", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_ROW_RESIZE },
+  { "all-scroll", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_ALL_SCROLL },
+  { "zoom-in", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_ZOOM_IN },
+  { "zoom-out", WP_CURSOR_SHAPE_DEVICE_V1_SHAPE_ZOOM_OUT },
+  { NULL, 0 }
+};
+
+static gint
+_gdk_wayland_cursor_get_enum (GdkCursor *cursor)
+{
+  gint i;
+  const char *cursor_name = gdk_cursor_get_name (cursor);
+  if (cursor_name == NULL)
+    return 0;
+
+  for (i = 0; shape_map[i].cursor_name; i++)
+    {
+      if (g_str_equal (shape_map[i].cursor_name, cursor_name))
+        return shape_map[i].shape_val;
+    }
+
+  return 0;
+}
+
 gboolean
 gdk_wayland_device_update_surface_cursor (GdkDevice *device)
 {
@@ -260,7 +319,7 @@ gdk_wayland_device_update_surface_cursor (GdkDevice *device)
   GdkWaylandPointerData *pointer =
     gdk_wayland_device_get_pointer (wayland_device);
   struct wl_buffer *buffer;
-  int x, y, w, h;
+  int x, y, w, h, num;
   double scale;
   guint next_image_index, next_image_delay;
   gboolean retval = G_SOURCE_REMOVE;
@@ -273,7 +332,12 @@ gdk_wayland_device_update_surface_cursor (GdkDevice *device)
       g_getenv ("USE_POINTER_VIEWPORT"))
     use_viewport = TRUE;
 
-  if (pointer->cursor)
+  if (!pointer->cursor)
+    {
+      pointer->cursor_timeout_id = 0;
+      return G_SOURCE_REMOVE;
+    }
+  else if (pointer->cursor)
     {
       buffer = _gdk_wayland_cursor_get_buffer (GDK_WAYLAND_DISPLAY (seat->display),
                                                pointer->cursor,
@@ -282,20 +346,30 @@ gdk_wayland_device_update_surface_cursor (GdkDevice *device)
                                                pointer->cursor_image_index,
                                                &x, &y, &w, &h, &scale);
     }
-  else
+
+  if (tablet && !tablet->current_tool)
     {
       pointer->cursor_timeout_id = 0;
       return G_SOURCE_REMOVE;
     }
 
-  if (tablet)
+  num = _gdk_wayland_cursor_get_enum (pointer->cursor);
+  if (num != 0)
     {
-      if (!tablet->current_tool)
+      if (tablet && tablet->current_tool->shape_device)
         {
-          pointer->cursor_timeout_id = 0;
-          return G_SOURCE_REMOVE;
+          wp_cursor_shape_device_v1_set_shape (tablet->current_tool->shape_device, pointer->enter_serial, num);
+          return G_SOURCE_CONTINUE;
         }
+      else if (seat->wl_pointer && pointer->shape_device)
+        {
+          wp_cursor_shape_device_v1_set_shape (pointer->shape_device, pointer->enter_serial, num);
+          return G_SOURCE_CONTINUE;
+        }
+    }
 
+  if (tablet)
+    {
       zwp_tablet_tool_v2_set_cursor (tablet->current_tool->wp_tablet_tool,
                                      pointer->enter_serial,
                                      pointer->pointer_surface,
diff --git a/gdk/wayland/gdkdisplay-wayland.c b/gdk/wayland/gdkdisplay-wayland.c
index 860abf28af..0145b0f1fc 100644
--- a/gdk/wayland/gdkdisplay-wayland.c
+++ b/gdk/wayland/gdkdisplay-wayland.c
@@ -59,6 +59,7 @@
 #include <wayland/xdg-foreign-unstable-v1-client-protocol.h>
 #include <wayland/xdg-foreign-unstable-v2-client-protocol.h>
 #include <wayland/server-decoration-client-protocol.h>
+#include <wayland/cursor-shape-v1-client-protocol.h>
 #include "linux-dmabuf-unstable-v1-client-protocol.h"
 #include "presentation-time-client-protocol.h"
 #include "xx-color-management-v4-client-protocol.h"
@@ -547,6 +548,13 @@ gdk_registry_handle_global (void               *data,
                           &wp_single_pixel_buffer_manager_v1_interface,
                           MIN (version, 1));
     }
+  else if (strcmp (interface, wp_cursor_shape_manager_v1_interface.name) == 0)
+    {
+      display_wayland->shape_manager =
+          wl_registry_bind (display_wayland->wl_registry, id,
+                            &wp_cursor_shape_manager_v1_interface,
+                            MIN (version, 1));
+    }
 
   g_hash_table_insert (display_wayland->known_globals,
                        GUINT_TO_POINTER (id), g_strdup (interface));
@@ -762,6 +770,7 @@ gdk_wayland_display_dispose (GObject *object)
   g_clear_pointer (&display_wayland->linux_dmabuf, zwp_linux_dmabuf_v1_destroy);
   g_clear_pointer (&display_wayland->dmabuf_formats_info, dmabuf_formats_info_free);
   g_clear_pointer (&display_wayland->color, gdk_wayland_color_free);
+  g_clear_pointer (&display_wayland->shape_manager, wp_cursor_shape_manager_v1_destroy);
 
   g_clear_pointer (&display_wayland->shm, wl_shm_destroy);
   g_clear_pointer (&display_wayland->wl_registry, wl_registry_destroy);
@@ -1943,7 +1952,7 @@ init_settings (GdkDisplay *display)
       const char *schema_str;
       GVariant *val;
       GVariantIter *iter;
-      const char *patterns[] = { "org.gnome.*", NULL }; 
+      const char *patterns[] = { "org.gnome.*", NULL };
 
       display_wayland->settings_portal = g_dbus_proxy_new_for_bus_sync (G_BUS_TYPE_SESSION,
                                                                         G_DBUS_PROXY_FLAGS_NONE,
diff --git a/gdk/wayland/gdkdisplay-wayland.h b/gdk/wayland/gdkdisplay-wayland.h
index 2eafef7c66..77ae2666dc 100644
--- a/gdk/wayland/gdkdisplay-wayland.h
+++ b/gdk/wayland/gdkdisplay-wayland.h
@@ -42,6 +42,7 @@
 #include <gdk/wayland/presentation-time-client-protocol.h>
 #include <gdk/wayland/single-pixel-buffer-v1-client-protocol.h>
 #include <gdk/wayland/xdg-dialog-v1-client-protocol.h>
+#include <wayland/cursor-shape-v1-client-protocol.h>
 
 #include <glib.h>
 #include <gdk/gdkkeys.h>
@@ -122,6 +123,7 @@ struct _GdkWaylandDisplay
   struct xdg_activation_v1 *xdg_activation;
   struct wp_fractional_scale_manager_v1 *fractional_scale;
   struct wp_viewporter *viewporter;
+  struct wp_cursor_shape_manager_v1 *shape_manager;
   struct wp_presentation *presentation;
   struct wp_single_pixel_buffer_manager_v1 *single_pixel_buffer;
   GdkWaylandColor *color;
diff --git a/gdk/wayland/gdkseat-wayland.c b/gdk/wayland/gdkseat-wayland.c
index 3517d94423..ffe11ff7f4 100644
--- a/gdk/wayland/gdkseat-wayland.c
+++ b/gdk/wayland/gdkseat-wayland.c
@@ -38,6 +38,7 @@
 #include "gdkwayland.h"
 #include "gdkprivate.h"
 
+#include "cursor-shape-v1-client-protocol.h"
 #include "pointer-gestures-unstable-v1-client-protocol.h"
 #include "tablet-unstable-v2-client-protocol.h"
 
@@ -2077,6 +2078,12 @@ static void
 _gdk_wayland_seat_remove_tool (GdkWaylandSeat           *seat,
                                GdkWaylandTabletToolData *tool)
 {
+  GdkWaylandDisplay *display_wayland = GDK_WAYLAND_DISPLAY (seat->display);
+  if (display_wayland->shape_manager)
+    {
+      g_clear_pointer (&tool->shape_device,
+                       wp_cursor_shape_device_v1_destroy);
+    }
   seat->tablet_tools = g_list_remove (seat->tablet_tools, tool);
 
   gdk_seat_tool_removed (GDK_SEAT (seat), tool->tool);
@@ -2360,9 +2367,19 @@ seat_handle_capabilities (void                    *data,
                                                         &gesture_hold_listener, seat);
             }
         }
+      if (display_wayland->shape_manager)
+        {
+          seat->pointer_info.shape_device =
+              wp_cursor_shape_manager_v1_get_pointer (display_wayland->shape_manager, seat->wl_pointer);
+        }
     }
   else if (!(caps & WL_SEAT_CAPABILITY_POINTER) && seat->wl_pointer)
     {
+      if (display_wayland->shape_manager)
+        {
+          g_clear_pointer (&seat->pointer_info.shape_device,
+                           wp_cursor_shape_device_v1_destroy);
+        }
       g_clear_pointer (&seat->wp_pointer_gesture_swipe,
                        zwp_pointer_gesture_swipe_v1_destroy);
       g_clear_pointer (&seat->wp_pointer_gesture_pinch,
@@ -3691,12 +3708,20 @@ tablet_seat_handle_tool_added (void                      *data,
                                struct zwp_tablet_tool_v2 *wp_tablet_tool)
 {
   GdkWaylandSeat *seat = data;
+  GdkWaylandDisplay *display_wayland = GDK_WAYLAND_DISPLAY (seat->display);
   GdkWaylandTabletToolData *tool;
 
   tool = g_new0 (GdkWaylandTabletToolData, 1);
   tool->wp_tablet_tool = wp_tablet_tool;
   tool->seat = GDK_SEAT (seat);
 
+  if (display_wayland->shape_manager)
+    {
+      tool->shape_device =
+          wp_cursor_shape_manager_v1_get_tablet_tool_v2 (
+              display_wayland->shape_manager, tool->wp_tablet_tool);
+    }
+
   zwp_tablet_tool_v2_add_listener (wp_tablet_tool, &tablet_tool_listener, tool);
   zwp_tablet_tool_v2_set_user_data (wp_tablet_tool, tool);
 
diff --git a/gdk/wayland/meson.build b/gdk/wayland/meson.build
index 706da22c83..b894588cc2 100644
--- a/gdk/wayland/meson.build
+++ b/gdk/wayland/meson.build
@@ -151,6 +151,11 @@ proto_sources = [
     'stability': 'private',
     'version': 4,
   },
+  {
+    'name': 'cursor-shape',
+    'stability': 'staging',
+    'version': 1,
+  },
 ]
 
 gdk_wayland_gen_headers = []
-- 
2.47.1

